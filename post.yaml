###############################################################################
# 1) ConfigMap
###############################################################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: post-config
data:
  application.properties: |-
    spring.application.name=post
    server.port=5551
    management.endpoints.web.base-path=/public
    management.endpoints.web.exposure.include=*

    # Point to the user service (formerly the "identity" service) via Kubernetes DNS
    identity.service.url=http://user-service:5550

    # Point to Postgres via its Service name (assuming its Service is "postgres-service")
    spring.datasource.url=jdbc:postgresql://postgres-service:5432/postgres
    spring.datasource.username=root
    spring.datasource.password=root
    spring.datasource.driver-class-name=org.postgresql.Driver

    spring.jpa.hibernate.ddl-auto=update
    spring.jpa.show-sql=false
    spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

    server.error.include-stacktrace=on_param
    internal.service.token=super-secret-internal-service-account-token

    # RabbitMQ (assuming you have a Service "rabbitmq-service" at port 4321, 
    # or adjust if needed)
    spring.rabbitmq.port=4321
    spring.rabbitmq.username=user
    spring.rabbitmq.password=password

    jwt.secret=asdhuiopasasdasdhjklasdhjkasdhuiopasasdasdhjklasdhjkasdhuiopasasdasdhjklasdhjkasdhuiopasasdasdhjklasdhjk
---
###############################################################################
# 2) Deployment
###############################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: post-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: post
  template:
    metadata:
      labels:
        app: post
    spec:
      containers:
        - name: post-container
          image: post
          imagePullPolicy: Never
          ports:
            - containerPort: 5551
          args:
            # Instruct Spring Boot to also load external props from /config/application.properties
            - "-Dspring.config.additional-location=file:/config/application.properties"
            - "-jar"
            # Make sure the JAR name/path matches how you built your Docker image
            - "/app/post-service.jar"
          volumeMounts:
            - name: config-volume
              mountPath: /config  # This is where the file will go inside the container
      volumes:
        - name: config-volume
          configMap:
            name: post-config
---
###############################################################################
# 3) Service
###############################################################################
apiVersion: v1
kind: Service
metadata:
  name: post-service
spec:
  selector:
    app: post
  type: LoadBalancer
  ports:
    - name: http
      port: 5551
      targetPort: 5551

